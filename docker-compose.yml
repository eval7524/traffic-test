services:
  statistics-app:
    ### Option 1 : Use directly build but slow
#    image: gradle:8.11.1-jdk17
#    container_name: statistics-app
#    working_dir: /home/gradle/src
#    volumes:
#      - .:/home/gradle/src
#    command: sh -c "gradle clean build && java -jar statistics/build/libs/statistics.jar"
    ### Option 2 : Use Local build and just
    build:
      context: statistics
      dockerfile: Dockerfile
    ports:
      - "8091:8191"
    networks:
      - traffic-network
    depends_on:
      - traffic-db
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  board-app:
    ### Option 1 : Use directly build but slow
#    image: gradle:8.11.1-jdk17
#    container_name: board-app
#    working_dir: /home/gradle/src
#    volumes:
#      - .:/home/gradle/src
#    command: sh -c "gradle clean build && java -jar board/build/libs/board.jar"
    ### Option 2 : Use Local build and just
    build:
      context: board
      dockerfile: Dockerfile
    ports:
      - "8090:8190"
    networks:
      - traffic-network
    depends_on:
      - traffic-db
      - traffic-redis
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  mysqld-exporter:
    image: prom/mysqld-exporter:v0.17.2
    container_name: mysqld-exporter
    ports:
      - "9104:9104"
    command:
      - "--mysqld.username=root:mysql_password"
      - "--mysqld.address=traffic-db:3306"
    networks:
      - traffic-network
    volumes:
      - mysqld_exporter_data:/var/lib/mysqld_exporter
    depends_on:
      - traffic-db
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  redis-exporter:
    image: oliver006/redis_exporter:v1.76.0
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=traffic-redis:6379
    networks:
      - traffic-network
    depends_on:
      - traffic-redis
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/var/lib/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - traffic-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  traffic-redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - traffic-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
  traffic-db:
    image: mariadb:10.5
    container_name: traffic-db
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - traffic-network
    environment:
      - MYSQL_ROOT_PASSWORD=mysql_password
      - MYSQL_DATABASE=traffic
      - MYSQL_USER=traffic
      - MYSQL_PASSWORD=traffic-password
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - traffic-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
networks:
  traffic-network:
    driver: bridge

volumes:
  db_data:
  grafana_data:
  prometheus_data:
  mysqld_exporter_data:
  redis_data: