plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

bootJar.enabled = false

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

subprojects {
	group = 'com.traffictest'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()

	}

	dependencies { // 모든 하위 모듈에 추가 될 의존성 목록입니다.
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'net.datafaker:datafaker:2.4.2'
        //querydsl
        implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
        implementation 'com.querydsl:querydsl-core:5.1.0'
        annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api:3.0.0'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.2.0'

        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

        runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.mariadb.jdbc:mariadb-java-client'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
	}

	test {
		useJUnitPlatform()
	}

}
//
//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
